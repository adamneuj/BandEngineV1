@model BandEngine.Models.ConcertViewModel

@{
    ViewBag.Title = "Details";
}

<p>
    <h5>
        @Html.ActionLink("Upcoming Concerts", "Index") |
        @Html.ActionLink("Past Concerts", "PastConcerts") |
        @Html.ActionLink("Tours", "!NEEDTOBEADDED!")
    </h5>
</p>

<h2>Details</h2>

<div>
    <h4>ConcertViewModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("Date")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Concert.ConcertDate)
        </dd>

        <dt>
            @Html.DisplayName("Venue Name")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Concert.VenueName)
        </dd>

        <dt>
            @Html.DisplayName("Address")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FullAddress)
        </dd>

        <dt>
            @Html.DisplayName("Capacity")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Concert.VenueCapacity)
        </dd>

    </dl>
</div>

@{
    var ApiUrlStr = BandEngine.Private.ApiKey.GoogleUrl;
    var ApiKeyStr = BandEngine.Private.ApiKey.GoogleKey;
    var ApiKeyCbk = BandEngine.Private.ApiKey.GoogleCallback;
    string googleMapsRequest = ApiUrlStr + ApiKeyStr + ApiKeyCbk;
}

<script async defer src=@googleMapsRequest>
</script>
<style>
    #map {
        width: 100%;
        height: 400px;
        background-color: grey;
    }
</style>

<div id="map">
    <script>
        function initMap() {
            var address = { lat: @Model.Address.Lat, lng: @Model.Address.Lng };
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 12, center: address });
            var marker = new google.maps.Marker({position: address, map: map});
        }
    </script>
</div>

<p>
    @Html.ActionLink("Back to List", "Index")
</p>
